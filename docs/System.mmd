graph TD
    User["User (Artist)"]
    Admin["Administrator"]
    QR["QR Code"]

    subgraph ClientSide["Client-Side (User's Browser)"]
        direction TB
        WebApp["Projekt-X Web App<br/>(HTML, CSS, TS/JS, Vite, js-draw)"]
        WebApp --> WebApp_Home["Home Page (index.html)"]
        WebApp --> WebApp_Paint["Paint Page (paint.html)<br/>(Drawing Canvas)"]
        WebApp --> WebApp_Gallery["Gallery Page (gallery.html)"]
        WebApp --> WebApp_Info["Info Pages (about.html, terms.html)"]
    end

    subgraph ServerSide["Server-Side (Host Environment)"]
        direction TB
        BackendApp["Backend Application<br/>(Node.js, Express.js)"]
        BackendApp --> APIServer["API Server (/api/*)<br/>(Image Upload, Gallery, Moderation)"]
        BackendApp --> AdminUI["Admin UI (/admin)<br/>(EJS Templates, Basic Auth)"]
        BackendApp --> StaticServing["Static File Serving<br/>(Approved: /gallery_images, Staging: /data/staging)"]

        Database["SQLite Database<br/>(gallery.db - gallery_images table)"]
        ImageStorage["File System (Server)<br/>(SVG Images: data/staging, data/approved, data/rejected)"]

        APIServer --> Database
        APIServer --> ImageStorage
        AdminUI --> Database
        AdminUI --> ImageStorage
        StaticServing --> ImageStorage
    end

    %% User and Admin Interactions
    QR -- "1. Scan to get Projekt-X URL" --> User
    User -- "2. Accesses Web App via URL" --> WebApp
    WebApp_Paint -- "3. Uploads SVG Art" --> APIServer
    WebApp_Gallery -- "4. Fetches Approved Gallery Images" --> APIServer
    WebApp_Gallery -- "5. Displays Approved Images (Loaded via Static Serving)" --> StaticServing

    Admin -- "6. Accesses Admin UI (/admin) with Credentials" --> AdminUI
    AdminUI -- "7. Moderates Images (Approve/Reject via API)" --> APIServer
    AdminUI -- "8. Views Staged Images (Loaded via Static Serving)" --> StaticServing


    %% Styling (Optional, for renderers that support it)
    classDef client fill:#f9f,stroke:#333,stroke-width:2px;
    classDef server fill:#ccf,stroke:#333,stroke-width:2px;
    classDef db fill:#ff9,stroke:#333,stroke-width:2px;
    classDef fs fill:#9cf,stroke:#333,stroke-width:2px;
    classDef actor fill:#fff,stroke:#000,stroke-width:2px;

    class User,Admin actor;
    class ClientSide client;
    class ServerSide server;
    class Database db;
    class ImageStorage fs;
